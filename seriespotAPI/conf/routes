# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# users
GET 	 /users/me					controllers.UserController.getProfile()
GET      /users						controllers.UserController.getAllUsers()
GET      /users/$id<[0-9]+> 		controllers.UserController.getUser(id: Integer)
POST     /users                     controllers.UserController.createUser()
PUT      /users/me 		            controllers.UserController.updateUser()
DELETE   /users/me 		            controllers.UserController.deleteUser()


# friends
POST    /users/me/friends       	        controllers.FriendController.addFriend()
GET     /users/me/friends                   controllers.FriendController.getUserFriends(status: String ?= null, dir:  String ?= null, name:  String ?= null)
GET     /users/me/friends/$idFriend<[0-9]+> controllers.FriendController.getFriend(idFriend: Integer)
PUT 	/users/me/friends/$idFriend<[0-9]+> controllers.FriendController.confirmPendingFriend(idFriend: Integer)
DELETE  /users/me/friends/$idFriend<[0-9]+> controllers.FriendController.deleteFriend(idFriend: Integer, status: String ?= null, dir: String ?= null)

GET     /users/$idUser<[0-9]+>/friends                   controllers.FriendController.getFriendsOfFriend(idUser: Integer)
GET     /users/$idUser<[0-9]+>/friends/$idFriend<[0-9]+> controllers.FriendController.getFriendOfFriend(idUser: Integer, idFriend: Integer)



# series users
GET    /users/me/series             controllers.SeriesController.getAllUserSeries()
GET    /users/me/series/:id    	    controllers.SeriesController.getUserSeries(id: String)
POST   /users/me/series				controllers.SeriesController.addSeries()
PUT    /users/me/series/:id/ratings	controllers.SeriesController.rateSeries(id: String)
DELETE /users/me/series/:id         controllers.SeriesController.deleteSeries(id: String)

# friend series
GET     /users/me/friends/$idFriend<[0-9]+>/series           controllers.SeriesController.getAllFriendSeries(idFriend: Integer)
GET     /users/me/friends/$idFriend<[0-9]+>/series/:idSeries controllers.SeriesController.getFriendSeries(idFriend: Integer, idSeries: String)

# series
GET   /series    			        		controllers.SeriesController.searchSeries(name: String ?= null, location: String ?= "SERIESPOT", limit: Integer ?= null)
GET   /series/:id    			    		controllers.SeriesController.getSeries(id: String, location: String ?= "IMDB", sort: String ?= null)
GET   /series/:id/seasons		    		controllers.SeasonController.getAllSeasons(id: String)
GET   /series/:idSeries/seasons/:idSeason   controllers.SeasonController.getSeason(idSeries: String, idSeason: String)
GET   /series/:idSeries/seasons/:idSeason/episodes				controllers.EpisodeController.getAllEpisodeSeason(idSeries: String, idSeason: String)
GET   /series/:idSeries/seasons/:idSeason/episodes/:idEpisode	controllers.EpisodeController.getEpisodeSeason(idSeries: String, idSeason: String, idEpisode: String)
GET   /series/:id/ratings   	    controllers.SeriesController.getRatedSeries(id: String)


# login
POST    /login                      controllers.SecurityController.login()

# logout
POST    /logout                     controllers.SecurityController.logout()



